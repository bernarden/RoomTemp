// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoomTemp.Data;

namespace RoomTemp.Data.Migrations
{
    [DbContext(typeof(TemperatureContext))]
    [Migration("20181202075845_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("RoomTemp.Data.Device", b =>
                {
                    b.Property<int>("DeviceId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("DeviceId");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("RoomTemp.Data.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("LocationId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("RoomTemp.Data.Sensor", b =>
                {
                    b.Property<int>("SensorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("SensorId");

                    b.ToTable("Sensor");
                });

            modelBuilder.Entity("RoomTemp.Data.TempReading", b =>
                {
                    b.Property<int>("TempReadingId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DeviceId");

                    b.Property<int>("LocationId");

                    b.Property<int>("SensorId");

                    b.Property<DateTime>("TakenAt");

                    b.Property<decimal>("Temperature");

                    b.HasKey("TempReadingId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("LocationId");

                    b.HasIndex("SensorId");

                    b.ToTable("TempReading");
                });

            modelBuilder.Entity("RoomTemp.Data.TempReading", b =>
                {
                    b.HasOne("RoomTemp.Data.Device", "Device")
                        .WithMany("TempReadings")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RoomTemp.Data.Location", "Location")
                        .WithMany("TempReadings")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RoomTemp.Data.Sensor", "Sensor")
                        .WithMany("TempReadings")
                        .HasForeignKey("SensorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
